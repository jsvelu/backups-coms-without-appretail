'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _methodMap = require('./methodMap');

var _methodMap2 = _interopRequireDefault(_methodMap);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (methodName, version) {
    if (_semver2.default.gte(version, '4.0.0')) {
        return 'lodash/' + methodName;
    }

    if (_semver2.default.gte(version, '3.0.0')) {
        if (!_methodMap2.default[methodName]) {
            throw new Error('lodash method "' + methodName + '" does not exist. If you think it is an error, report it at https://github.com/gajus/babel-plugin-lodash-modularize/issues/1.');
        }

        return 'lodash/' + _methodMap2.default[methodName] + '/' + methodName;
    }

    throw new Error('Unknown lodash version.');
};

module.exports = exports['default'];
//# sourceMappingURL=resolveMethod.js.map
