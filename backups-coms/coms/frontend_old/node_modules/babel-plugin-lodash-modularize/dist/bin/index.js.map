{"version":3,"sources":["bin/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAI,sBAAsB,YAAA;IACtB,qBAAqB,YAAA;IACrB,cAAc,YAAA;IACd,eAAe,YAAA;;;AAAC;AAEpB,eAAe,GAAG,EAAE,CAAC;AACrB,cAAc,GAAG,EAAE,CAAC;;AAEpB,qBAAqB,GAAG,eAAK,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEhE,sBAAsB,GAAG,aAAG,WAAW,CAAC,qBAAqB,CAAC,CAAC;;AAE/D,uBAAU,sBAAsB,EAAE,UAAC,qBAAqB,EAAK;AACzD,QAAI,qBAAqB,YAAA;QACrB,iBAAiB,YAAA;QACjB,IAAI,YAAA,CAAC;;AAET,yBAAqB,GAAG,eAAK,IAAI,CAAC,qBAAqB,EAAE,qBAAqB,CAAC,CAAC;;AAEhF,QAAI,GAAG,aAAG,QAAQ,CAAC,qBAAqB,CAAC,CAAC;;AAE1C,QAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;AACrB,eAAO;KACV;;AAED,qBAAiB,GAAG,aAAG,WAAW,CAAC,qBAAqB,CAAC,CAAC;AAC1D,qBAAiB,GAAG,mBAAM,iBAAiB,EAAE,UAAC,QAAQ,EAAK;AACvD,eAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAChC,CAAC;;;;AAAC,AAIH,2BAAU,iBAAiB,EAAE,UAAC,UAAU,EAAK;;;AAGzC,YAAI,wBAAW,eAAe,EAAE,UAAU,CAAC,EAAE;AACzC,mBAAO;SACV;;AAED,uBAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEjC,sBAAc,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,GAAG,qBAAqB,GAAG,IAAI,CAAC,CAAC;KAC3E,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,cAAc,GAAG,oBAAoB,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,UAAC,UAAU,EAAK;AAAE,WAAO,MAAM,GAAG,UAAU,CAAC;CAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;;AAExI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC","file":"bin/index.js","sourcesContent":["/**\n * Used to generate map of the function categories.\n */\nimport _ from 'lodash';\nimport fs from 'fs';\nimport path from 'path';\n\nlet categoryDirectoryNames,\n    lodashModuleDirectory,\n    mapDeclaration,\n    mappedFunctions;\n\nmappedFunctions = [];\nmapDeclaration = [];\n\nlodashModuleDirectory = path.dirname(require.resolve('lodash'));\n\ncategoryDirectoryNames = fs.readdirSync(lodashModuleDirectory);\n\n_.forEach(categoryDirectoryNames, (categoryDirectoryName) => {\n    let categoryDirectoryPath,\n        modulesInCategory,\n        stat;\n\n    categoryDirectoryPath = path.join(lodashModuleDirectory, categoryDirectoryName);\n\n    stat = fs.statSync(categoryDirectoryPath);\n\n    if (!stat.isDirectory()) {\n        return;\n    }\n\n    modulesInCategory = fs.readdirSync(categoryDirectoryPath);\n    modulesInCategory = _.map(modulesInCategory, (fileName) => {\n        return fileName.slice(0, -3);\n    });\n\n    // modulesInCategory\n\n    _.forEach(modulesInCategory, (moduleName) => {\n        // Some (collection/math max, min) functions are declared as aliases.\n\n        if (_.includes(mappedFunctions, moduleName)) {\n            return;\n        }\n\n        mappedFunctions.push(moduleName);\n\n        mapDeclaration.push(moduleName + ': \\'' + categoryDirectoryName + '\\'');\n    });\n});\n\nmapDeclaration = 'export default {\\n' + mapDeclaration.sort().map((moduleName) => { return '    ' + moduleName; }).join(',\\n') + '\\n};';\n\nconsole.log(mapDeclaration);\n"],"sourceRoot":"/source/"}